version: '3.8'

services:
  app:
    build: .
    container_name: instagram_bot
    restart: unless-stopped
    volumes:
      - .:/app
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      - ./backup:/app/backup
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - TZ=Asia/Tehran
    depends_on:
      - postgres
    networks:
      - instagram-bot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      bash -c "
        sleep 10 &&
        python -m app.models.database && 
        python db_recovery.py & 
        uvicorn app.main:app --host 0.0.0.0 --port 8000"

  postgres:
    image: postgres:14-alpine
    container_name: instagram_bot_db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-instagrambot}
      - TZ=Asia/Tehran
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    ports:
      - "5432:5432"
    networks:
      - instagram-bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: postgres -c shared_buffers=128MB -c max_connections=50

  # بدون سرویس backup - این را حذف می‌کنیم چون مشکل دارد

networks:
  instagram-bot-network:
    driver: bridge

volumes:
  postgres_data:
    name: instagram_bot_postgres_data