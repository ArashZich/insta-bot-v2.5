version: '3.8'

services:
  app:
    build: .
    container_name: instagram_bot
    restart: unless-stopped
    volumes:
      - .:/app
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      - ./data:/app/data
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - instagram-bot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  postgres:
    image: postgres:13-alpine
    container_name: instagram_bot_db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-instagrambot}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - instagram-bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    command: postgres -c shared_buffers=128MB -c max_connections=100

networks:
  instagram-bot-network:
    driver: bridge